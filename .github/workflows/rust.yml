---
name: Rust

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
    paths:
      - 'Cargo.toml'
      - 'src/**'
      - '.codespellrc'
      - '.github/workflows/rust.yml'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'Cargo.toml'
      - 'src/**'
      - '.codespellrc'
      - '.github/workflows/rust.yml'

env:
  CARGO_TERM_COLOR: always

jobs:
  codespell:
    name: Check for spelling mistakes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Codespell
        uses: codespell-project/actions-codespell@v2

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check format
        run: cargo fmt --check

  check-msrv:
    name: Check MSRV
    needs:
      - codespell
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: [ 1.64.0, 1.79.0, stable, nightly ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust-version }}

      - name: Install dependencies
        run: cargo fetch

      - name: Check MSRV (HAL 0.2)
        run: cargo check --all-targets --verbose --no-default-features --features=hal-0_2

      - name: Check MSRV (HAL 1.0)
        run: cargo check --all-targets --verbose --no-default-features --features=hal-1_0

  docs:
    name: Build documentation
    needs:
      - codespell
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hal:
          - hal-0_2
          - hal-1_0
    steps:
      - uses: actions/checkout@v4
      - name: Build documentation
        run: cargo doc --no-default-features --features=${{ matrix.hal }}

  build-linux:
    name: Build on Linux
    needs:
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hal:
          - hal-0_2
          - hal-1_0
    steps:
      - uses: actions/checkout@v4
      - name: Clippy
        run: cargo clippy --no-default-features --features=${{ matrix.hal }}
      - name: Install dependencies
        run: cargo fetch
      - name: Build
        run: cargo build --verbose --no-default-features --features=${{ matrix.hal }}
      - name: Run doctests
        run: cargo test --doc --verbose --no-default-features --features=${{ matrix.hal }}
      - name: Run regular tests
        run: cargo test --tests --verbose --no-default-features --features=${{ matrix.hal }}

  build-hals:
    name: Build HAL supports
    needs:
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hal:
          - hal-0_2,stm32f303xc
    steps:
      - uses: actions/checkout@v4
      - name: Clippy
        run: cargo clippy --no-default-features --features="${{ matrix.hal }}"
      - name: Install dependencies
        run: cargo fetch
      - name: Build
        run: cargo build --verbose --no-default-features --features="${{ matrix.hal }}"
      - name: Run doctests
        run: cargo test --doc --verbose --no-default-features --features="${{ matrix.hal }}"
      - name: Run regular tests
        run: cargo test --tests --verbose --no-default-features --features="${{ matrix.hal }}"
